<div class="container send-email">
    <div class="row">
       <Animate Animation="Animations.SlideUp" DurationMs="1500" >
        <div class="col-12 col-md-6">
            <EditForm class="form-contact" Model="@contact" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <InputText class="form-control" placeholder="Name" @bind-Value="contact.Name" />
                </div>
                <div class="form-group">
                    <InputText class="form-control" placeholder="Email" @bind-Value="contact.Email" />
                </div>
                <div class="form-group position-relative">
                    <InputTextArea class="form-control" placeholder="Message"
                                   @bind-Value="contact.Message" />
                </div>
                <div>
                    @if (!string.IsNullOrEmpty(message))
                    {
                        <p>@message</p>
                    }
                    <br />
                    <button type="submit" class="button">Send email</button>
                </div>
            </EditForm>
       
            <br />
            
        </div>
        </Animate>
    </div>
</div>


@code {
    private string message = string.Empty;
    private Contact contact = new Contact();
    [Inject]
    public IJSRuntime JsRuntime { get; set; }

    string toEmailAddress = "evulet2.08@gmail.com";
    string subject = "";
    string body = "";
    private async Task HandleValidSubmit()
    {
        
        subject = contact.Name;
        body = contact.Message;
        bool response =await SendLocalEmail(toEmailAddress, subject, body);
        if (response)
        {
            message = "Follow your default mail app ";

        }
        else
        {
            message = "There was an error sending the message";
        }

    }
  
    protected async Task<bool> SendLocalEmail(string toEmailAddress,string subject,string body)
    {
        Object[] obj = new Object[3] { toEmailAddress, subject, body };

        await JsRuntime.InvokeAsync<object>("blazorExtensions.SendLocalEmail", obj);
        
        Console.WriteLine("Sent");
        return true;

    }
   
}
    
    
