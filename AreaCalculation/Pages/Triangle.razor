@page "/triangle"
@using Figures.Contracts;
@using Figures;

@if(triangle == null)
{
    <DisplaySpinner></DisplaySpinner>

}
<h2>Triangle</h2>
<br />
<div>
	
	
	<div class="box_5"></div> 
</div>
<div class="row">
	<div class="col-6 border p-3">
		<div>
			
			X:<input type="number" style="width:100px" @bind-value=@sides[0] @bind-value:event="oninput" /><br />
		</div>
		<br />
		<div>
			Y:<input type="number" style="width:100px" @bind-value=@sides[1] @bind-value:event="oninput" /><br />

		</div>
		<br />
		<div>
			Z:<input type="number" style="width:100px" @bind-value=@sides[2] @bind-value:event="oninput" /><br />

		</div>
	</div>
	<div class="col-6 border p-3">
		
		<button class="btn btn-success" @onclick="CheckTriangle">
		<b>Calculate triangle area</b></button>
		<div>Is that possible to create a triangle by given sides?:<br />
			<p class="status">@message</p>
		</div>
		
		<p role="status">Triangle area:@message1</p>
		<p role="status">Has a triangle have a right corner?:<br />@message2 </p>
		
	</div>
	
</div>
@code {


	
	private double area = 1;
	private int[] sides = new int[3] { 7, 5, 6 };
	string message="";
	string message1
	= "";
	string message2
	= "";
	ITriangle triangle = Figures.GetTriangle();
	public bool CreateTriangle()
	{
		if((sides[0]==0)&&(sides[1]==0)
				&&(sides[1]==0))
		{
			
			return false;
		}

		if(triangle.IsTriangle(sides)==true)
		{
			message = "Triangle created!";
			Console.WriteLine("true"+" "+ sides[0]+" "+area);
			return true;

		}
		else
		{
			message = "Checked sides! Creation failed";
			Console.WriteLine("false");
			return false;

		}
	}
	public double CalculateArea()
	{
		area = triangle.Area(sides);
		Console.WriteLine(area);
		return area;
	}
	public bool IsTriangleRight()
	{
		if (triangle.IsTriangleRight(sides))
		{

			return true;
		}
		else
		{
			
			return false;
		}
	}
	public void CheckTriangle()
	{ 
		bool result = CreateTriangle();
		if (result)
		{
			message = "Triangle created!";
		}
		else
		{
			message = "Checked sides! Creation failed";
		}
		if (CalculateArea() > 0)
		{
			message1 = area.ToString();
		}
		else
		{
			message1 = "Calculation unavailable!";
		}
		if (IsTriangleRight())
		{
			message2 = "Triangle has a right corner";
		}
		else
		{
			message2 = "Triangle doesn't have a right corner";
		}
	}

	

	

}
